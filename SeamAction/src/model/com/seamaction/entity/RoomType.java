package com.seamaction.entity;
// Generated Nov 8, 2015 3:16:52 PM by Hibernate Tools 3.2.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.NotNull;

/**
 * RoomType generated by hbm2java
 */
@Entity
@Table(name = "room_type", catalog = "dampevillage")
public class RoomType implements java.io.Serializable {

	private int roomTypeId;
	private String roomType;
	private String description;
	private Set<Room> rooms = new HashSet<Room>(0);
	private Set<RoomPool> roomPools = new HashSet<RoomPool>(0);
	private Set<RoomRates> roomRateses = new HashSet<RoomRates>(0);

	public RoomType() {
	}

	public RoomType(int roomTypeId) {
		this.roomTypeId = roomTypeId;
	}
	public RoomType(int roomTypeId, String roomType, String description,
			Set<Room> rooms, Set<RoomPool> roomPools, Set<RoomRates> roomRateses) {
		this.roomTypeId = roomTypeId;
		this.roomType = roomType;
		this.description = description;
		this.rooms = rooms;
		this.roomPools = roomPools;
		this.roomRateses = roomRateses;
	}

	@Id
	@Column(name = "room_type_id", unique = true, nullable = false)
	@NotNull
	public int getRoomTypeId() {
		return this.roomTypeId;
	}

	public void setRoomTypeId(int roomTypeId) {
		this.roomTypeId = roomTypeId;
	}

	@Column(name = "room_type")
	public String getRoomType() {
		return this.roomType;
	}

	public void setRoomType(String roomType) {
		this.roomType = roomType;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "roomType")
	public Set<Room> getRooms() {
		return this.rooms;
	}

	public void setRooms(Set<Room> rooms) {
		this.rooms = rooms;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "roomType")
	public Set<RoomPool> getRoomPools() {
		return this.roomPools;
	}

	public void setRoomPools(Set<RoomPool> roomPools) {
		this.roomPools = roomPools;
	}
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "roomType")
	public Set<RoomRates> getRoomRateses() {
		return this.roomRateses;
	}

	public void setRoomRateses(Set<RoomRates> roomRateses) {
		this.roomRateses = roomRateses;
	}

}
